<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rysh.module.serverSystem.mapper.RoleMapper">
    <resultMap id="roleList" type="com.rysh.module.serverSystem.beans.Role">
        <result property="id" column="id"></result>
        <result property="roleName" column="role_name"></result>
        <result property="status" column="status"></result>
        <result property="createdTime" column="created_time"></result>
        <result property="lastedUpdateTime" column="lasted_update_time"></result>
    </resultMap>

    <resultMap id="functionList" type="com.rysh.module.serverSystem.beans.Function">
        <result property="id" column="id"></result>
        <result property="functionName" column="function_name"></result>
        <result property="functionUrl" column="function_url"></result>
        <result property="status" column="status"></result>
        <result property="createdTime" column="created_time"></result>
        <result property="lastedUpdateTime" column="lasted_update_time"></result>
    </resultMap>


    <resultMap id="AUser" type="com.rysh.module.serverSystem.beans.User">
        <result column="id" property="id"></result>
        <result column="username" property="username"></result>
        <result column="password" property="password"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="lasted_update_time" property="lastedUpdateTime"></result>
        <result column="status" property="status"></result>
        <result column="is_insider" property="isInsider"></result>
        <result column="true_name" property="trueName"></result>
        <result column="phone_num" property="phoneNum"></result>
    </resultMap>

    <select id="findRoleByRoleName" resultMap="roleList">
         select * from server_role where role_name=#{roleName} and status =1
    </select>

    <insert id="addRole" parameterType="com.rysh.module.serverSystem.beans.Role">
        insert into server_role (id,role_name,created_time,status) values (#{id},#{roleName},#{createdTime},#{status})
    </insert>

    <insert id="addFunctionToRole" parameterType="com.rysh.module.serverSystem.beans.RoleAndFunction">
        insert into server_role_function (role_id,function_id) values (#{Rid},#{Fid})
    </insert>

    <select id="findUserByRole" resultMap="AUser" parameterType="String">
        select * from server_user where id in (select user_id from server_user_role where role_id=(select id from server_role where role_name=#{roleName} and status=1)) and status=1
   </select>

    <update id="deleteRole" parameterType="String">
        update server_role set status = -1 where role_name=#{roleName}
    </update>

    <select id="findRidByroleName" parameterType="String" resultType="String">
        select id from server_role where role_name=#{roleName} and status =1
    </select>


    <delete id="deleteFunctionFromRole" parameterType="com.rysh.module.serverSystem.beans.RoleAndFunction">
        delete from server_role_function where role_id=#{Rid} and function_id=#{Fid}
    </delete>

    <select id="findRoleByUid" parameterType="String" resultMap="roleList">
        select * from server_role where id in (select role_id from server_user_role where user_id=#{userId})
    </select>

    <select id="findFunctionByRole" parameterType="String" resultMap="functionList">
        select s.* from server_function s,(select * from server_function where parent_id is null) b where s.id in (select function_id from server_role_function where role_id=(select id from server_role where role_name=#{roleName} and status =1)) and s.parent_id=b.id
          ORDER BY b.order_num,s.order_num asc
    </select>

    <delete id="deleteUserFunction" parameterType="com.rysh.module.serverSystem.beans.UserAndFunction">
        delete from server_user_function where function_id=#{Fid} and user_id=#{Uid}
    </delete>

    <select id="findFunctionByUsername" resultMap="functionList" parameterType="String">
      select * from server_function where id in (select function_id from server_user_function where user_id=(select id from server_user where username=#{username} and status=1)) and status=1
    </select>

    <insert id="addFunctionToUser" parameterType="com.rysh.module.serverSystem.beans.UserAndFunction">
        insert into server_user_function (user_id,function_id) values(#{Uid},#{Fid})
    </insert>

    <select id="findRoleByRid" parameterType="String" resultMap="roleList">
        select * from server_role where id = #{roleId} and status =1
    </select>

    <update id="updateRoleName" parameterType="com.rysh.module.serverSystem.beans.Role">
        update server_role set role_name=#{roleName} where id = #{id}
    </update>

    <delete id="deleteFunctionByRole" parameterType="String">
        delete from server_role_function where role_id=#{roleId}
    </delete>

    <select id="findFidByUrl" parameterType="String" resultType="String">
        select id from server_function where function_url=#{functionURL}
    </select>

    <select id="findAllRole" resultMap="roleList">
        select * from server_role where status=1
    </select>

    <select id="findFunctionByFid" parameterType="String" resultMap="functionList">
        select * from server_function where id=#{functionId} and status =1
    </select>
    <select id="findUserByRoleId" parameterType="String" resultMap="AUser">
        select * from server_user where id in (select user_id from server_user_role where role_id=#{roleId})
    </select>

    <select id="findFunctionByRoleId" parameterType="String" resultMap="functionList">
        select * from server_function where id in (select function_id from server_role_function where role_id=#{roleId})
    </select>

    <delete id="trueDeleteUser" parameterType="String">
        delete from server_user where id =#{userId}
    </delete>

    <select id="searchAllRole" parameterType="String" resultMap="roleList">
       select distinct  r.*
        from server_role r LEFT JOIN server_role_function rf
        on r.id=rf.role_id LEFT JOIN server_function f
        on rf.function_id=f.id
        where r.`status`=1 and f.`status`=1 and (r.role_name like "%"#{searchCondition}"%" or f.function_name like "%"#{searchCondition}"%")
    </select>

    <select id="findParentFunctionByRid" parameterType="String" resultMap="functionList">
        select * from server_function where id in (select parent_id from server_function
        where id in (select function_id from server_role_function where role_id=#{roleId})) ORDER BY order_num asc
    </select>
</mapper>